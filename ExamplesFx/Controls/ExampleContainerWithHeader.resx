<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="reflectionHeader1.Images" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>