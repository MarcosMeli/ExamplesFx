<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="reflectionHeader1.Images" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>